- platform: wunderground
  api_key: 1e3e716e93f82a3c
  monitored_conditions:
    - alerts
    - weather_1d
    - precip_1d
- platform: darksky
  api_key: !secret darksky
  monitored_conditions:
    - icon
    - summary
    - precip_intensity
    - precip_probability
    - temperature
    - temperature_max
    - temperature_min
- platform: google_travel_time
  name: Drive_time_to_work
  api_key: AIzaSyBf2VtYWJ9-F-2T78pRq-YcnE8vTxrc9jk
  origin: place_id:ChIJG1SUhnKff4gRz9_GI6GdfUY
  destination: place_id:ChIJkRB9LrKFf4gRgqu8ivoA0x8
  options:
    arrival_time: '09:15:00'
- platform: template
  sensors:
    current_activity:
      friendly_name: 'Current Activity'
      value_template: '{{ states.remote.living_room.attributes.current_activity }}'
    brightness_pntry:
      value_template: '{{ states.light.pantry.attributes.brightness }}'
    brightness_lr:
      value_template: '{{ states.light.living_room.attributes.brightness }}'
    color_temp_lr:
      value_template: '{{ states.light.living_room.attributes.xy_color }}'
    color_temp_br:
      value_template: '{{ states.light.master_bedroom.attributes.xy_color }}'
    color_temp_cl:
      value_template: '{{ states.light.cabinet_lights.attributes.xy_color }}'
    time:
      value_template: '{{(now().strftime("%H") | int) + (now().strftime("%M")|int / 60) | round(2)}}'
    protect_down:
      value_template: '{% if is_state("binary_sensor.downstairs_nest_protect_online", "on") %}Online{% else %}Error{% endif %}'    
    protect_up:
      value_template: '{% if is_state("binary_sensor.upstairs_nest_protect_online", "on") %}Online{% else %}Error{% endif %}'
    front_door:
      friendly_name: 'Front Door'
      value_template: '{% if is_state("binary_sensor.front_door", "off") %}Closed{% else %}Open{% endif %}'
      icon_template: '{% if is_state("binary_sensor.front_door", "off") %}mdi:crop-portrait{% else %}mdi:logout{% endif %}'
    back_door:
      friendly_name: 'Back Door'
      value_template: '{% if is_state("binary_sensor.back_door", "off") %}Closed{% else %}Open{% endif %}'
      icon_template: '{% if is_state("binary_sensor.back_door", "off") %}mdi:crop-portrait{% else %}mdi:logout{% endif %}'
    garage_door:
      friendly_name: 'Garage Door'
      value_template: '{% if is_state("binary_sensor.garage_door", "off") %}Closed{% else %}Open{% endif %}'
      icon_template: '{% if is_state("binary_sensor.garage_door", "off") %}mdi:crop-portrait{% else %}mdi:logout{% endif %}'
    front_windows:
      friendly_name: 'Front Windows'
      value_template: '{% if is_state("binary_sensor.front_windows", "off") %}Closed{% else %}Open{% endif %}'
      icon_template: '{% if is_state("binary_sensor.front_windows", "off") %}mdi:window-closed{% else %}mdi:window-open{% endif %}'
    back_windows:
      friendly_name: 'Back Windows'
      value_template: '{% if is_state("binary_sensor.back_windows", "off") %}Closed{% else %}Open{% endif %}'
      icon_template: '{% if is_state("binary_sensor.back_windows", "off") %}mdi:window-closed{% else %}mdi:window-open{% endif %}'
    bedroom_windows:
      friendly_name: 'Bedroom Windows'
      value_template: '{% if is_state("binary_sensor.bedroom_windows", "off") %}Closed{% else %}Open{% endif %}'
      icon_template: '{% if is_state("binary_sensor.bedroom_windows", "off") %}mdi:window-closed{% else %}mdi:window-open{% endif %}'
    huebridge:
      value_template: '{% if is_state("device_tracker.huebridge", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'Hue Bridge'
    harmonyhub:
      value_template: '{% if is_state("device_tracker.harmonyhub", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'Harmony Hub'
    kevobridge:
      value_template: '{% if is_state("device_tracker.kevobridge", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'Kevo Bridge'
    smartthingshub:
      value_template: '{% if is_state("device_tracker.smartthingshub", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'SmartThings Hub'
    myq:
      value_template: '{% if is_state("device_tracker.myq", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'MyQ Bridge'
    macmini:
      value_template: '{% if is_state("device_tracker.macmini", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'Mac Mini'
    directv_genie:
      value_template: '{% if is_state("device_tracker.directv_genie", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'DirecTv Genie'
    google_home:
      value_template: '{% if is_state("device_tracker.google_home", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'Google Home' 
    chromecast:
      value_template: '{% if is_state("device_tracker.chromecast", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'Chromecast'
    chromecast_audio:
      value_template: '{% if is_state("device_tracker.chromecast_audio", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'Chromecast Audio'  
    viziocrave360:
      value_template: '{% if is_state("device_tracker.viziocrave360", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'Vizio Crave 360' 
    rasplex:
      value_template: '{% if is_state("device_tracker.rasplex", "home") %}Online{% else %}Offline{% endif %}'
      friendly_name: 'RasPlex'
    hass_update_available:
      friendly_name: 'HASS Update Available'
      value_template: >-
        {%- if states.sensor.current_hass_version.state != states.sensor.installed_hass_version.state -%}
           {{ states.sensor.current_hass_version.state }}
        {%- else -%}
           No
        {%- endif -%}
- platform: random
  name: whitenoise
  minimum: 1
  maximum: 3
- platform: command_line
  name: CPU Temperature
  scan_interval:
    seconds: 10
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  value_template: '{{ value | multiply(0.0018) | round(1) +32 }}'
  unit_of_measurement: "Â°F"
- platform: systemmonitor
  scan_interval:
    seconds: 10
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: processor_use
- platform: mqtt
  state_topic: "smartthings/Front Door/battery"
  name: "Doorbell Battery"
  unit_of_measurement: "%"
- platform: command_line
  scan_interval:
    minutes: 60
  command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
  name: Current HASS Version
- platform: command_line
  scan_interval:
    minutes: 60
  command: "/usr/local/bin/hass --version"
  name: Installed HASS Version
