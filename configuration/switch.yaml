- platform: template
  switches:
    vacation_mode:
      value_template: "{{ states.group.vacation_mode.state == 'off' }}"
      turn_on:
        service: automation.turn_off
        entity_id: group.vacation_mode
      turn_off:
        service: automation.turn_on
        entity_id: group.vacation_mode
    routines:
      value_template: "{{ states.group.routines.state == 'off' }}"
      turn_on:
        service: automation.turn_off
        entity_id: group.routines
      turn_off:
        - service: automation.turn_on
          entity_id: group.routines
    switch_xbox:
      value_template: "{{ is_state('remote.bedroom', 'Switch xbox') }}"
      turn_on:
        service: remote.turn_on
        entity_id: remote.bedroom
        data:
          activity: 25977203
      turn_off:
        service: remote.turn_off
        entity_id: remote.bedroom
        data:
          activity: 25977203
- platform: mqtt
  name: 'Christmas Lights'
  state_topic: "smartthings/Christmas Lights/switch"
  command_topic: "smartthings/Christmas Lights/switch"
  payload_on: "on"
  payload_off: "off"
  retain: true
#- platform: command_line
#  scan_interval: 30
#  switches:
#    door_front:
#      command_on: "python /home/hass/.homeassistant/kevo/lock-front.py"
#      command_off: "python /home/hass/.homeassistant/kevo/unlock-front.py"
#      command_state: "python /home/hass/.homeassistant/kevo/status-front.py"
#      value_template: >
#        {% if value == "Locked" %}
#          true
#        {% elif value == "Unlocked" %}
#          false
#        {% else %}
#        {% endif %}
#    door_rear:
#      command_on: "python /home/hass/.homeassistant/kevo/lock-rear.py"
#      command_off: "python /home/hass/.homeassistant/kevo/unlock-rear.py"
#      command_state: "python /home/hass/.homeassistant/kevo/status-rear.py"
#      value_template: >
#        {% if value == "Locked" %}
#          true
#        {% elif value == "Unlocked" %}
#          false
#        {% else %}
#        {% endif %}
