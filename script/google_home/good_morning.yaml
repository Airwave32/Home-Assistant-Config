good_morning:
  sequence:
    - service: media_player.volume_set
      entity_id: media_player.all_assistants
      data: 
        volume_level: 0.5
    - service: tts.google_say
      entity_id: media_player.all_assistants
      data_template:
        message: >
          {% set hour = (now().strftime("%l")) | int %}
          {% set mhour = (now().strftime("%H")) | int %}
          {% set minute = (now().strftime("%M")) | int %}
          Good{% if mhour < 12 %} morning.{% elif mhour < 18 %} afternoon.{% else %} evening.{% endif %}
          The current time is {% if minute > 0 %}{{states.sensor.time_2.state | replace('13:','1:')| replace('14:','2:')| replace('15:','3:')| replace('16:','4:')| replace('17:','5:')| replace('18:','6:')| replace('19:','7:')| replace('20:','8:')| replace('21:','9:')| replace('22:','10:')| replace('23:','11:')| replace('24:','12:')}}.{% else %}{{ mhour }} o'clock.{% endif %}
          The current temperature is {{states.sensor.dark_sky_temperature.state | round(0)}} degrees and the weather forecast for today is {{ states.sensor.pws_weather_1d.state | replace("mph", "miles per hour") | replace("High ", "High of ") | replace("Low ", "Low of ") | replace("F.", " degrees.") | replace("F ", "degrees.") | replace("WSW ", "west south west ") | replace("SSW ", "south south west ") | replace("ENE ", "east north east ") | replace("NNE ", "north north east ") | replace("ENE ", "east north east ") | replace("ESE ", "east south east ") | replace("SSE ", "south south east ") | replace("WNW ", "west north west ") | replace("NNW ", "north north west ") | replace("NE ", "north east ") | replace("NE.", "north east.") | replace("SE ", "south east ") | replace("SE.", "south east.") | replace("SW ", "south west ") | replace("SW.", "south west.") | replace("NW ", "north west ") | replace("N ", "north ") | replace("N.", "north.") | replace("S ", "south ") | replace("S.", "south.") | replace("E ", "east ") | replace("E.", "east.") | replace("W ", "west ") | replace("W.", "west.") | replace("WSW.", "west south west.") | replace("SSW.", "south south west.") | replace("ENE.", "east north east.") | replace("NNE.", "north north east.") | replace("ENE.", "east north east.") | replace("ESE.", "east south east.") | replace("SSE.", "south south east.") | replace("WNW.", "west north west.") | replace("NNW.", "north north west.")}} {% if states.sensor.pws_alerts.state | int > 0 %}We are currently under a {{ states.sensor.pws_alerts.attributes.Description | replace(", ", " and a ")}}{% endif %}{% if states.sensor.dark_sky_daily_high_temperature.state | int <= 45%}Don't forget your coat.{% elif states.sensor.pws_precip_1d.state | int >= 50 %}Don't forget your umbrella.{% endif %}
          {% set event_date = states.calendar.tristans_calendar.attributes.start_time.split(" ")[0] %}
          {% set event_time = states.calendar.tristans_calendar.attributes.start_time.split(" ")[1] %}
          {% set Y,M,D = event_date.split("-") %}
          {% set h,m,s =event_time.split(":") %}
          {% if (h|int) > 12%}{% set hh= (h|int)-12 % {% set q= "pm" %}{% else %}{% set hh= (h|int)%}{% set q= "am"%}{% endif%}
          {% if states.calendar.tristans_calendar.attributes.all_day == true %}
            {% if M==now().strftime("%-m") and D==now().strftime("%-d") %}Tristan has an all day event today titled {{states.calendar.tristans_calendar.attributes.message}}.
            {% elif ((now().strftime("%-d")|int)+1) == (D|int) %}Tristan has an all day event tomorrow titled {{states.calendar.tristans_calendar.attributes.message}}.
            {% endif %}
          {% else %}
            {% if M==now().strftime("%-m") and D==now().strftime("%-d") %}Tristan has a calendar event today at {{hh}}:{{m}}{{q}} called {{states.calendar.tristans_calendar.attributes.message}}.
            {% elif ((now().strftime("%-d")|int)+1) == (D|int) %}Tristan has a calendar event tomorrow at {{hh}}:{{m}}{{q}} called {{states.calendar.tristans_calendar.attributes.message}}.
            {% else %}Tristan has a calendar event on {{M | replace("12", "December") | replace("11", "November") | replace("10", "October") | replace("9", "September") | replace("8", "August") | replace("7", "July") | replace("6", "June") | replace("5", "May") | replace("4", "April") | replace("3", "March") | replace("2", "February") | replace("1", "January")}} {{D | replace("31","thirty first") | replace("30","thirtieth") | replace("29","twenty nineth") | replace("28","twenty eighth") | replace("27","twenty seventh") | replace("26","twenty sixth") | replace("25","twenty fifth") | replace("24","twenty fourth") | replace("23","twenty third") | replace("22","twenty second") | replace("21","twenty first") | replace("20","twentieth") | replace("19","nineteenth") | replace("18","eightteenth") | replace("17","seventeenth") | replace("16","sixteenth") | replace("15","fifteenth") | replace("14","fourteenth") | replace("13","thirteenth") | replace("12","twelfth") | replace("11","eleventh") | replace("10","tenth") | replace("09","nineth") | replace("08","eighth") | replace("07","seventh") | replace("06","sixth") | replace("05","fifth") | replace("04","fourth") | replace("03","third") | replace("02","second") | replace("01","first")}} at {{hh}}:{{m}}{{q}} called {{states.calendar.tristans_calendar.attributes.message}}.
            {% endif %}
          {% endif %}
          {% set event_date = states.calendar.crystals_calendar.attributes.start_time.split(" ")[0] %}
          {% set event_time = states.calendar.crystals_calendar.attributes.start_time.split(" ")[1] %}
          {% set Y,M,D = event_date.split("-") %}
          {% set h,m,s =event_time.split(":") %}
          {% if (h|int) > 12%}{% set hh= (h|int)-12 %}{% set q= "pm" %}{% else %}{% set hh= (h|int)%}{% set q= "am"%}{% endif%}
          {% if states.calendar.crystals_calendar.attributes.all_day == true %}
            {% if M==now().strftime("%-m") and D==now().strftime("%-d") %}Crystal has an all day event today titled {{states.calendar.crystals_calendar.attributes.message}}.
            {% elif ((now().strftime("%-d")|int)+2) == (D|int) %}Crystal has an all day event tomorrow titled {{states.calendar.crystals_calendar.attributes.message}}.
            {% endif %}
          {% else %}
            {% if M==now().strftime("%-m") and D==now().strftime("%-d") %} Crystal has a calendar event today at {{hh}}:{{m}}{{q}} called {{states.calendar.crystals_calendar.attributes.message}}.
            {% elif ((now().strftime("%-d")|int)+1) == (D|int) %} Crystal has a calendar event tomorrow at {{hh}}:{{m}}{{q}} called {{states.calendar.crystals_calendar.attributes.message}}.
            {% else %}Crystal has a calendar event on {{M | replace("12", "December") | replace("11", "November") | replace("10", "October") | replace("9", "September") | replace("8", "August") | replace("7", "July") | replace("6", "June") | replace("5", "May") | replace("4", "April") | replace("3", "March") | replace("2", "February") | replace("1", "January")}} {{D | replace("31","thirty first") | replace("30","thirtieth") | replace("29","twenty nineth") | replace("28","twenty eighth") | replace("27","twenty seventh") | replace("26","twenty sixth") | replace("25","twenty fifth") | replace("24","twenty fourth") | replace("23","twenty third") | replace("22","twenty second") | replace("21","twenty first") | replace("20","twentieth") | replace("19","nineteenth") | replace("18","eightteenth") | replace("17","seventeenth") | replace("16","sixteenth") | replace("15","fifteenth") | replace("14","fourteenth") | replace("13","thirteenth") | replace("12","twelfth") | replace("11","eleventh") | replace("10","tenth") | replace("09","nineth") | replace("08","eighth") | replace("07","seventh") | replace("06","sixth") | replace("05","fifth") | replace("04","fourth") | replace("03","third") | replace("02","second") | replace("01","first")}} at {{hh}}:{{m}}{{q}} called {{states.calendar.crystals_calendar.attributes.message}}.
            {% endif %}
          {% endif %}
#          {% if now().strftime("%H")| int < 11 and now().strftime("%w")| int > 0 and now().strftime("%w")| int < 6 %}  
#            Your drive to work should take approximately {{states.sensor.drive_time_to_work.state | round (0)}} minutes.
#          {% endif %}
    - service: light.turn_on
      entity_id: light.recessed_lights
      data:
        brightness: 255
    - service: light.turn_on
      entity_id: light.living_room
      data: 
        brightness: 255
      data_template:
        color_temp: >
          {% if (states.sensor.time.state | round(2)) <= 05.00 %}
            500
          {% elif (states.sensor.time.state | round(2)) <= 09.50 %}
            200
          {% elif (states.sensor.time.state | round(2)) >= 22.25 %}
            500
          {% elif states.sun.sun.attributes.elevation < 8 %}
            366
          {% elif (states.sensor.time.state | round(2)) > 9.50 %}
            300
          {% else %}
          {% endif %}
    - service: lock.unlock
      entity_id: lock.back_door
    - service: script.fan_on
    - service: remote.turn_on
      entity_id: remote.living_room
      data:
        activity: 19594181
    - condition: and
      conditions: 
        - condition: time
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
        - condition: time
          before: '10:00:00'
    - delay:
        seconds: 25
    - service: remote.send_command
      entity_id: remote.living_room
      data:
        device: 35163109
        command: ['1', '3', 'NumberEnter']
